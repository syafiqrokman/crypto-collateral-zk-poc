plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'

    // üîç Code Quality
    id 'checkstyle'
    id 'pmd'
    id 'com.github.spotbugs' version '5.0.13'

    // üîê Dependency Security
    id 'org.owasp.dependencycheck' version '8.4.2'

    // ‚úÖ Test Coverage
    id 'jacoco'
}

group = 'com.web3company'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // ‚úÖ Core Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // ‚úÖ In-Memory DB for dev & testing
    runtimeOnly 'com.h2database:h2'

    // ‚úÖ PostgreSQL for future production DB
    runtimeOnly 'org.postgresql:postgresql'

    // ‚úÖ Spring Boot Test Suite
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // ‚úÖ Mockito + JSON + JUnit5
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    // healthcheck
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.web3j:core:4.10.3'

}

checkstyle {
    toolVersion = '10.12.2'
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    ignoreFailures = true // ‚úÖ allow warnings but don‚Äôt fail build
    showViolations = true
}

pmd {
    toolVersion = '6.55.0'
    ruleSets = []
    ruleSetFiles = files("config/pmd/pmd-ruleset.xml")
}

spotbugs {
    toolVersion = '4.8.3'
    ignoreFailures = false
    showProgress = true
    effort = 'max'
    reportLevel = 'high'
}

//jacoco {
//    toolVersion = "0.8.8"
//}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
//    finalizedBy
//    jacocoTestReport
}

//jacocoTestReport {
//    dependsOn test
//    reports {
//        xml.required = true
//        html.required = true
//    }
//}

dependencyCheck {
    suppressionFile = 'dependency-check-suppress.xml'
    failBuildOnCVSS = 7
    analyzers.assemblyEnabled = false
}



